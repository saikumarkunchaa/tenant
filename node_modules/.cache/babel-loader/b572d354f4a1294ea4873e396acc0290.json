{"ast":null,"code":"import _regeneratorRuntime from \"/home/saikumar/tenant/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(CreateTenant),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(actionWatcher),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { put, takeLatest, all, call, take } from \"redux-saga/effects\";\n\nfunction CreateTenant(info) {\n  var result;\n  return _regeneratorRuntime.wrap(function CreateTenant$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fetch, \"https://sai.com\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json, application/xml, text/plain, text/html, *.*\",\n              \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n            },\n            body: JSON.stringify(info)\n          });\n\n        case 3:\n          result = _context.sent;\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 6]]);\n}\n\nfunction actionWatcher() {\n  var action;\n  return _regeneratorRuntime.wrap(function actionWatcher$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take(\"CREATE_TENANT\");\n\n        case 2:\n          action = _context2.sent;\n          _context2.next = 5;\n          return call(CreateTenant, action.payload);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([actionWatcher()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["/home/saikumar/tenant/src/sagas/index.js"],"names":["CreateTenant","actionWatcher","rootSaga","put","takeLatest","all","call","take","info","fetch","method","headers","Accept","body","JSON","stringify","result","console","log","action","payload"],"mappings":";;;;yBACUA,Y;;;yBAcAC,a;;;yBAKeC,Q;;AApBzB,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;;AACA,SAAUP,YAAV,CAAuBQ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMF,IAAI,CAACG,KAAD,EAAQ,iBAAR,EAA2B;AAClDC,YAAAA,MAAM,EAAE,MAD0C;AAElDC,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,+DADD;AAEP,8BAAgB;AAFT,aAFyC;AAMlDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAN4C,WAA3B,CAAV;;AAFnB;AAEUQ,UAAAA,MAFV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWIC,UAAAA,OAAO,CAACC,GAAR;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUjB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMM,IAAI,CAAC,eAAD,CAAV;;AAFjB;AAEQY,UAAAA,MAFR;AAAA;AAGE,iBAAMb,IAAI,CAACN,YAAD,EAAemB,MAAM,CAACC,OAAtB,CAAV;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUlB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMG,GAAG,CAAC,CAACJ,aAAa,EAAd,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, takeLatest, all, call, take } from \"redux-saga/effects\";\nfunction* CreateTenant(info) {\n  try {\n    const result = yield call(fetch, \"https://sai.com\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, application/xml, text/plain, text/html, *.*\",\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\"\n      },\n      body: JSON.stringify(info)\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nfunction* actionWatcher() {\n  //yield takeLatest('CREATE_TENANT',CreateTenant);\n  const action = yield take(\"CREATE_TENANT\");\n  yield call(CreateTenant, action.payload);\n}\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}\n"]},"metadata":{},"sourceType":"module"}